
akka {

  # https://doc.akka.io/docs/akka/current/general/configuration.html

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "WARNING"
  log-config-on-start = on
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "WARNING"

  actor {
    serializers {
      datasetEvent = "com.elementanalytics.datasets.proto.events.DatasetEventProtobufSerializer"
    }

    serialization-bindings {
      "com.elementanalytics.datasets.proto.events.Appended"  = datasetEvent
      "com.elementanalytics.datasets.proto.events.Created"  = datasetEvent
      "com.elementanalytics.datasets.proto.events.Truncated"  = datasetEvent
      "com.elementanalytics.datasets.proto.events.LabelUpdated"  = datasetEvent
      "com.elementanalytics.datasets.proto.events.LabelGroupUpdated"  = datasetEvent
      "com.elementanalytics.datasets.proto.events.LabelRemoved"  = datasetEvent
    }
  }

  http {

    # TODO: fix ... it's bad to use infinite...
    parsing {
      # This can lead to denial of service attacks
      max-content-length: infinite
    }

    host-connection-pool {
      client {
        idle-timeout = 60s
      }
    }

    client {
      idle-timeout = 60s
    }
  }

  persistence {
    journal.plugin = "jdbc-journal"
    snapshot-store.plugin = "jdbc-snapshot-store"
  }
}